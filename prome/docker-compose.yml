version: '3'

networks:
  monitor-net:
    driver: bridge

volumes:
    prometheus_data: {}
    grafana_data: {}

services:
  prometheus:
    image: prom/prometheus:v2.2.1
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=90d'
      - '--web.enable-lifecycle'
      - '--web.external-url=http://<prometheus_host>:9090'
    restart: unless-stopped
    ports:
      - 9090:9090
    links:
      - alertmanager:alertmanager
      - blackbox:blackbox
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager:v0.14.0
    container_name: alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://<alertmanager_host>:9093'
    restart: unless-stopped
    ports:
      - 9093:9093
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager_dashboard:
    image: cloudflare/unsee:v0.9.2
    depends_on:
      - alertmanager
    restart: on-failure
    environment:
      ALERTMANAGER_URI: http://192.168.0.105:9093
      PORT: 55000
    ports:
      - 55000:55000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  node_exporter:
    image: prom/node-exporter:v0.15.2
    container_name: node_exporter
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    restart: unless-stopped
    ports:
      - 9100:9100
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana:5.0.3
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox_exporter
    user: root
    privileged: true
    volumes:
      - ./blackbox:/config
    restart: unless-stopped
    ports:
      - 9115:9115
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"